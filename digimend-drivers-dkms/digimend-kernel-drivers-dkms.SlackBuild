#!/bin/sh

# Slackware build script for digimend-kernel-drivers via dkms

# Copyright 2020 Rob van Nues
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=digimend-kernel-drivers-dkms
SRCNAM=digimend-kernel-drivers
MODNAM=digimend
VERSION=${VERSION:-9}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}


if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
## If you want that the kernel modules built by DKMS (as of version 2.8.1)
## are added to the package before installing this, use INPKG='yes'
## This will enable you to see what modules DKMS is going to make and
## where these are placed before installation. Removepkg will uninstall all 
## files. However, ONLY kernel modules installed WITH the package are removed.
## Modules automatically installed by `dkms autoinstall' after a kernel
## upgrade, will be missed. So when you remove this package under a newer 
## kernel and need to remove digimend drivers from its modules you can either: 
## run as root - BEFORE removepkg -: 'dkms remove digimend/$VERSION --all', 
## or use the douninst.sh (see below).
## If you remove the package 'manually' from the running kernel, you want
## to run depmod after package removal. 
## 
#INPKG='yes'
##
## Use INPKG='no' to let DKMS install and uninstall the drivers AFTER 
## Slackware's pkgtools has done its job. The doinst.sh runs dkms 
## commands for installation; the douninst.sh let dkms clean out its files
## using a .conf file 'parked' in /etc/dkms with: 
## 'dkms remove digimend/$VERSION --all -c /etc/dkms/digimend.conf'
## The dounist.sh removes dkms installed files and links, clears out the 
## /etc/dkms.digimend.conf file and runs depmod. This approach relies less
## on transferring dkms-steps and linking to package building and therefore
## is less prone to changes in dkms when this gets upgraded. A dkms install 
## does not replace modules already present in the kernel-tree (instead the 
## new modules go into 'extra') and is recommended by the digimend developers.
INPKG='no'

set -e

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.gz
cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Check if dkms is installed
if [ ! -x /usr/sbin/dkms ]; then
 echo "please install dkms from sbo"
 exit 1
fi
#https://github.com/DIGImend/digimend-kernel-drivers/pull/331/files
if [[ $(uname -r) > "5.3" ]] ; then
  patch -p 1 < $CWD/fix-build-kernel-current.patch
else
  echo "$(uname -r) invalid kernel"
  echo "only slackware current supported"
  exit 1
fi


# copying the debian dkms package structure:
# Install source files
mkdir -p $PKG/usr/src/$MODNAM-$VERSION/
cp -a \
  Makefile ./*.c  ./*.h dkms.conf depmod.conf\
  $PKG/usr/src/$MODNAM-$VERSION/

mkdir -p $PKG/usr/src/$MODNAM-$VERSION/usbhid 
cp -a \
  usbhid/*.h \
  $PKG/usr/src/$MODNAM-$VERSION/usbhid/
 
mkdir -p $PKG/lib/udev/rules.d/
cp hid-rebind $PKG/lib/udev/
cp udev.rules $PKG/lib/udev/rules.d/90-digimend.rules
 
mkdir -p $PKG/usr/share/X11/xorg.conf.d/
cp xorg.conf $PKG/usr/share/X11/xorg.conf.d/50-digimend.conf
# Example conf for huion, thanks to willysr
# https://slackblogs.blogspot.com/2020/04/configuring-huion-h430p-on-slackware.html
cp $CWD/50-huion.conf $PKG/usr/share/X11/xorg.conf.d/

# Use dkms install during generation of the $PKG, thanks to bassmadrigal
# https://www.linuxquestions.org/questions/slackware-14/how-can-removepkg-be-triggered-to-remove-stuff-placed-by-a-doinst-sh-4175672073/page3.html#post6108943
if [ $INPKG = 'yes' ]; then
 # Set up the source for dkms building
  mkdir -p $PKG/var/lib/dkms/${MODNAM}/${VERSION}
  # link between source and dkms build tree
  #dkms add ${MODNAM}/${VERSION} usr/src/${MODNAM}-${VERSION} #does not work
  #https://www.linuxquestions.org/questions/slackware-14/doinst-sh-syntax-help-please-522655/
  ( cd $PKG/usr/src/${MODNAM}-${VERSION} ; ln -sf /var/lib/dkms/${MODNAM}/$VERSION/source source )

  # Let's build it
  mkdir -p $PKG/lib/modules/`uname -r`/extra
  dkms install \
   -m ${MODNAM} \
   -v ${VERSION} \
   --sourcetree $PKG/usr/src \
   --dkmstree $PKG/var/lib/dkms \
   --installtree $PKG/lib/modules
fi
# store documentation
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  COPYING README.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

if [ $INPKG = 'yes' ]; then
  # we only need to run depmod
  cat $CWD/doinst.sh_depmod > $PKG/install/doinst.sh
elif  [ $INPKG = 'no' ]; then
  # we need to run dkms
  cat $CWD/doinst.sh_dkms > $PKG/install/doinst.sh
else
  echo "no valid build option, doinst.sh or douninst.sh found"
  exit 1
fi
cat $CWD/douninst.sh_dkms > $PKG/install/douninst.sh
#do not add extra symlinks ('-l n') to doinst.sh; 2 of the ones created are dead
cd $PKG
/sbin/makepkg -l n -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
